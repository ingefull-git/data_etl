version: '2.1'

orbs:
  python: circleci/python@2.0.3
  aws-ecr: circleci/aws-ecr@7.3.0

jobs:
  linting:
    executor: python/default
    resource_class: small
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip
            pip install -r build/requirements-base.txt
      - run:
          name: Lint with Black and isort
          command: |
            black --check --diff .
            isort --check-only --diff --profile black --line-length 80 .
      - run:
          name: Lint with Flake8
          command: flake8 .
  testing:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip
            pip install pytest
      - run:
          name: Test with Pytest
          command: pytest -sv
  deploy_base_image:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          create-repo: true
          dockerfile: Dockerfile
          attach-workspace: true
          checkout: true
          path: build/
          extra-build-args: "--build-arg GIT_BRANCH=${CIRCLE_BRANCH} --build-arg GIT_REV=${CIRCLE_SHA1::7} --build-arg DD_VERSION=${CIRCLE_BRANCH}:${CIRCLE_SHA1::7} --build-arg AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}"
          repo: analytics/self-serve-sim-app-base
          tag: base-${CIRCLE_SHA1::7}
  deploy_app_image:
    executor: aws-ecr/default
    steps:
      - aws-ecr/build-and-push-image:
          create-repo: true
          dockerfile: Dockerfile
          attach-workspace: true
          checkout: true
          path: .
          extra-build-args: "--build-arg GIT_BRANCH=${CIRCLE_BRANCH} --build-arg GIT_REV=${CIRCLE_SHA1::7} --build-arg DD_VERSION=${CIRCLE_BRANCH}:${CIRCLE_SHA1::7} --build-arg AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}"
          repo: analytics/self-serve-sim-app
          tag: app-${CIRCLE_SHA1::7}

workflows:
  uplift-app:
    jobs:
      - linting:
          context: CICD
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*base-image*/
      - testing:
          context: CICD
          filters:
            branches:
              only:
                - base
            tags:
              only: /.*/
      # - deploy_base_image:
      #     context: CICD
      #     requires:
      #       - linting
      #       - testing
      #     filters:
      #       branches:
      #         only:
      #           - main
      #       tags:
      #         only: /.*base-image*/
      # - deploy_app_image:
      #     context: CICD
      #     requires:
      #       - linting
      #       - testing
      #     filters:
      #       branches:
      #         only:
      #           - main
      #       tags:
      #         only: /.*/